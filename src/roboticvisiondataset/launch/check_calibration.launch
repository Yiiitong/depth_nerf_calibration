<launch>
    <!-- you can include the easy_handeye publish.launch file into your own launch files, according to this example;
    if you have to recalibrate, you can rerun your calibrate.launch and just restart the system -->

    <arg name="start_simulator" default="false" doc="Start a simulated tracking system with a trivial noise model" />
    <arg name="evaluation" default="true" doc="Start the evaluator to estimate the accuracy of the calibration" />

    <arg name="namespace_prefix" default="easy_handeye" />
    <arg name="eye_on_hand" default="true" />
    <arg if="$(arg eye_on_hand)" name="namespace" value="$(arg namespace_prefix)_eye_on_hand" />
    <arg unless="$(arg eye_on_hand)" name="namespace" value="$(arg namespace_prefix)_eye_on_base" />

    <arg name="robot_base_frame" value="iiwa_link_0" />
    <arg name="robot_effector_frame" value="iiwa_link_ee" />
    <!-- <arg name="robot_base_frame" value="world" /> -->

    <!-- <arg name="camera_name" value="camera/infra" />
    <arg name="frame_name" value="camera_infra_optical_frame" /> -->

    <!-- <arg name="camera_name" value="stereo_right" />
    <arg name="frame_name" value="rgb_r" /> -->

    <!-- <arg name="camera_name" value="polarization" />
    <arg name="frame_name" value="pol" /> -->

    <!-- <arg name="tracking_base_frame" value="camera_infra_optical_frame" />
    <arg name="camera_name_space" value="camera/infra"/>
    <arg name="camera_launch_file" value="rs_camera.launch"/>    -->


    <!-- <arg name="tracking_base_frame" value="camera_rgb_optical_frame" />
    <arg name="camera_name_space" value="camera/color"/>
    <arg name="camera_launch_file" value="rs_camera.launch"/>
    <arg name="image_name" value="image_raw"/> -->

    <arg name="tracking_base_frame" value="tof_confidence" />
    <arg name="camera_name_space" value="tof_confidence"/>
    <arg name="camera_launch_file" value="capture_multiple.launch"/>   
    <arg name="image_name" value="image_raw"/>
    
    <!-- <arg name="tracking_base_frame" value="rgb_l" />
    <arg name="camera_name_space" value="stereo_left"/>
    <arg name="camera_launch_file" value="left.launch"/>   
    <arg name="image_name" value="image_raw"/> -->

    
    <!-- <arg name="tracking_base_frame" value="d435_no_proj_left" />
    <arg name="camera_name_space" value="d435_no_proj_left"/>
    <arg name="camera_launch_file" value="capture_rs.launch"/>
    <arg name="image_name" value="image_raw"/> -->

    <!-- <arg name="tracking_base_frame" value="l515_rgb" />
    <arg name="camera_name_space" value="l515_rgb"/>
    <arg name="camera_launch_file" value="capture_l515_sync.launch"/>
    <arg name="image_name" value="image_raw"/> -->

    
    <!-- <arg name="tracking_base_frame" value="pol" />
    <arg name="camera_name_space" value="polarization" />
    <arg name="camera_launch_file" value="capture_multiple.launch"/>   
    <arg name="image_name" value="image_raw"/> -->

    <arg name="tracking_marker_frame" value="board" />

    <!-- start the robot -->
    <include file="$(find iiwa_moveit)/launch/moveit_planning_execution.launch">
        <arg name="sim" value="false" />
        <arg name="rviz" value="true" />
    </include>


    <!-- start camera driver -->
    <!-- <include file="$(find realsense2_camera)/launch/$(arg camera_launch_file)"> -->
    <include file="$(find roboticvisiondataset)/launch/$(arg camera_launch_file)">
    </include>

    <!-- start charuco -->
    <include file="$(find roboticvisiondataset)/launch/charuco_left.launch" >
        <arg name="image_name" value="$(arg image_name)"/>
        <arg name="frame_name" value="$(arg tracking_base_frame)" />
        <arg name="camera_name" value="$(arg camera_name_space)" />
        <!-- <arg name="camera" value="/rgb_r/color" />
        <arg name="frame" value="/rgb_r_color_optical_frame" /> -->
    </include>
 
    <!-- 0.00366991 -0.13656819  0.0570624   0.71609299 -0.01539732 -0.02569651  0.69736167
        <node pkg="tf" type="static_transform_publisher" name="fix_calibration" args="0.12403809975 -0.0425079970376 0.164393346092 0.502469502712 0.503133194673 0.497951534308 0.496412788659 $(arg robot_effector_frame) $(arg tracking_base_frame) 100" /> -->
    <!-- <node pkg="tf" type="static_transform_publisher" name="fix_calibration" args="0.120978114307 -0.04573[0.41745228 0.59330864 0.18922247]37961375 0.153204586467 0.498880476089 0.498596473199 0.504242927493 0.498255855524 $(arg robot_effector_frame) $(arg tracking_base_frame) 100" /> -->
    <node pkg="tf" type="static_transform_publisher" name="fix_marker" args="0.5224514  0.57945816 0.18971216  0.32107744 -0.54953718  0.38873071  0.6661881  world marker 100" />
    <node pkg="tf" type="static_transform_publisher" name="ee_to_left" args=" 0.06383825 -0.13110183  0.04660889  0.71287261 -0.01557497 -0.0112101  0.70103091 iiwa_link_ee $(arg tracking_base_frame) 100"/>
    <!-- direct inv -->
    <!-- <node pkg="tf" type="static_transform_publisher" name="left_to_right" args="0.09144838 -0.001042   -0.00340989  -0.00101784  0.01424276 -0.00135209  0.99989713  rgb_l rgb_r 100"/>
    <node pkg="tf" type="static_transform_publisher" name="right_to_pol"robot_base_frame args="-0.09258192 -0.07294939 -0.02314442  -0.00627528 -0.01188066  0.01061762  0.99985336 rgb_r pol 100"/>
    <node pkg="tf" type="static_transform_publisher" name="pol_to_tof" args=" 0.09221608 -0.00991694  0.00984984 -0.00202934  0.00298332 -0.00509034  0.99998053 pol tof 100"/>
    <node pkg="tf" type="static_transform_publisher" name="tof_to_rs" args=" -0.0445425   0.16073759 -0.00463972 -0.0056132   0.00312644  0.00431434  0.99997005 tof camera_infra_optical_frame 100"/> -->

    <!-- trans_inv -->
    <!-- <node pkg="tf" type="static_transform_publisher" name="left_to_right" args="0.0915109   -0.00079031  -0.00080564  0.00101784 -0.01424276  0.00135209  0.99989713  rgb_l rgb_r 100"/>
    <node pkg="tf" type="static_transform_publisher" name="right_to_pol" args="-0.09464144 -0.07067902 -0.0218212  0.00627528  0.01188066 -0.01061762  0.99985336 rgb_r pol 100"/>
    <node pkg="tf" type="static_transform_publisher" name="pol_to_tof" args="0.09225217  -0.00901893 0.01036175 0.00202934 -0.00298332  0.00509034  0.99998053 pol tof 100"/>
    <node pkg="tf" type="static_transform_publisher" name="tof_to_rs" args=" -0.04312947 0.16115933  -0.0031069 0.0056132  -0.00312644 -0.00431434  0.999970051 tof camera_infra_optical_frame 100"/> -->

    <!-- trans_inv_with_rot -->
    <!-- <node pkg="tf" type="static_transform_publisher" name="left_to_right" args=" 0.09149854 -0.00054385  0.00179983  0.00101784 -0.01424276  0.00135209  0.99989713  rgb_l rgb_r 100"/>
    <node pkg="tf" type="static_transform_publisher" name="right_to_pol" args="-0.09662011 -0.06838286 -0.020421332  0.00627528  0.01188066 -0.01061762  0.99985336 rgb_r pol 100"/>
    <node pkg="tf" type="static_transform_publisher" name="pol_to_tof" args="0.09227606 -0.0081227   0.01087748 0.00202934 -0.00298332  0.00509034  0.99998053 pol tof 100"/>
    <node pkg="tf" type="static_transform_publisher" name="tof_to_rs" args="-0.04172255  0.16155162 -0.0015607  0.0056132  -0.00312644 -0.00431434  0.999970051 tof camera_infra_optical_frame 100"/> -->

    <!-- evaluate the accuracy of the hand-eye calibration  -->
    <node if="$(arg evaluation)" ns="$(arg namespace)" name="calibration_evaluator" pkg="rqt_easy_handeye" type="rqt_calibration_evaluator" respawn="false" output="screen" >
        <param name="eye_on_hand" value="$(arg eye_on_hand)" />
        <param name="robot_base_frame" value="$(arg robot_base_frame)" />
        <param name="robot_effector_frame" value="$(arg robot_effector_frame)" />
        <param name="tracking_base_frame" value="$(arg tracking_base_frame)" />
        <param name="tracking_marker_frame" value="$(arg tracking_marker_frame)" />
    </node>

    <!-- start rviz with custom configuration -->
    <node ns="/iiwa" name="$(anon rviz)" pkg="rviz" type="rviz" respawn="true"
          args="-d $(find easy_handeye_demo)/launch/iiwa_stack_config.rviz" output="screen" />
</launch>