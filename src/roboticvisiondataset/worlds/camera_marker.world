<?xml version="1.0" ?>
<!-- http://sdformat.org/spec?ver=1.6&elem=sensor#sensor_camera -->
<sdf version="1.6">
  <world name="default">
    <scene>
      <ambient>1.0 1.0 1.0 1</ambient>
      <background>0.5 0.5 0.5 1</background>
      <shadows>false</shadows>
    </scene>

    <!-- AR marker -->
    <include>
      <uri>model://marker_checkerboard_7x8_30mm</uri>
      <static>true</static>
      <pose>0.5 0 0 0 1.57079632679 0</pose>
    </include>
    
    <!-- Light -->
    <!--light name='user_directional_light_0' type='directional'>
      <pose>0 0 1 0 0 0</pose>
      <diffuse>1.0 1.0 1.0 1.0</diffuse>
      <specular>0.0 0.0 0.0 1.0</specular>
      <attenuation>
        <range>100</range>
        <linear>0.01</linear>
        <constant>0.2</constant>
        <quadratic>0.0</quadratic>
      </attenuation>
      <direction>0 0 1</direction>
    </light-->

    <!-- Camera -->
    <model name='camera'>
      <static>true</static>
      <pose>0 0 0 0 0 0</pose>
      <link name='link'>
        <visual name='visual'>
          <geometry>
            <box>
              <size>0.1 0.1 0.1</size>
            </box>
          </geometry>
        </visual>
        <sensor name='my_camera' type='camera'>
          <camera>
            <!--save enabled="true">
              <path>/tmp/camera_save_tutorial</path>
            </save-->
            <!-- hfov_radian = atan(image_width / ( 2 * focal_length)) * 2 -->
            <horizontal_fov>0.976354271</horizontal_fov>
            <image>
              <width>640</width>
              <height>480</height>
              <format>R8G8B8</format>
            </image>
            <lens>
              <type>gnomonical</type>
              <intrinsics>
                <fx>602.5809936523438</fx>
                <fy>602.790771484375</fy>
                <cx>318.49566650390625</cx>
                <cy>251.39442443847656</cy>
                <s>1.0</s>
              </intrinsics>
            </lens>
            <distortion>
              <k1>0.14787238836288452</k1>
              <k2>-0.4849230647087097</k2>
              <k3>0.4212645888328552</k3>
              <p1>0.0020405694376677275</p1>
              <p2>6.937995203770697e-05</p2>
              <!--center>0.49764947891 0.52373838424</center-->
              <center>0.5 0.5</center>
            </distortion>
            <clip>
              <near>0.01</near>
              <far>100.0</far>
            </clip>
            <!--noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.007</stddev>
            </noise-->
          </camera>
          <!--always_on>1</always_on-->
          <update_rate>10</update_rate>
          <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>0.0</updateRate>
            <cameraName>sim/color</cameraName>
            <imageTopicName>image_raw</imageTopicName>
            <cameraInfoTopicName>camera_info</cameraInfoTopicName>
            <frameName>camera_link</frameName>
            <CxPrime>0.0</CxPrime>
            <Cx>318.49566650390625</Cx>
            <Cy>251.39442443847656</Cy>
            <!-- focal_length = image_width / (2*tan(hfov_radian /2)) -->
            <focal_length>0.0</focal_length>
            <!-- setting hackBaseline to anything but 0.0 will cause a misalignment
            between the gazebo sensor image and the frame it is supposed to
            be attached to -->
            <hackBaseline>0.0</hackBaseline>
            <distortionK1>0.14787238836288452</distortionK1>
            <distortionK2>-0.4849230647087097</distortionK2>
            <distortionK3>0.4212645888328552</distortionK3>
            <distortionT1>0.0020405694376677275</distortionT1>
            <distortionT2>6.937995203770697e-05</distortionT2>
            <autoDistortion>false</autoDistortion>
            <borderCrop>false</borderCrop>
          </plugin>
        </sensor>
      </link>
    </model>
  </world>
</sdf>
